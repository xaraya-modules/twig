{# modules/themes/admin-modifyconfig-idle.html.twig #}

{% block admin_modifyconfig_idle %}
{#  Being the prototype for the defautl xaraya BL2 templates this template
    demonstrates a number of problems with the BL language and what solutions we have devised for
    them in BL2: - abundant use of the xar:set tag to get values into an 
    <input />like tag This should not be necessary; no solution offered by BL yet -
    &amp;xar_modurl- like entities are problematic in validation, otherwise handy - filling the
    array of options manually by using a php array. - invalid xml (=&gt;) - mixing of template
    (xml) domain and code (php) domain - use of value="{{ submitbutton }}" in submit button is purely
    for ML reasons, that should not be needed. - xarVar::delCached should be in the code, the
    templater should not be bothered by it - input controls like a text input field require 4 lines
    of xml, but most of it is unstructured. Alternative examples have been added inline as comments
    for inspiration. - - ...amend when encountering more... #}
    <div id="themesAdminModifyconfig">
        <div class="xar-mod-head">
            <span class="xar-mod-title">Themes Administration</span>
        </div>
        <div class="xar-mod-body">
            {{ include('admin-menu.html.twig') }}
            <h2>Modify Configuration</h2>
            <form action="{{ xar_moduleurl('themes','admin','updateconfig') }}" method="post" enctype="application/x-www-form-urlencoded">
                <fieldset>
                    <legend>Configuration Options</legend>
                    <div class="textInputContainer">
                        {% set valThemedir = xar_modvar('themes', 'themesdirectory') %}
                        {{ xar_data_label({label: "Default Theme Directory", for: "themedir", title: "The default directory for site themes - no trailing slash."}) }}
                        {{ xar_data_input({id: "themedir", name: "themedir", type: "textbox", size: "15", maxlength: "100", value: valThemedir}) }}
                    </div>
                    <fieldset>
                        <legend>Admin Dashboard</legend>
                        <div class="checkInputContainer">
                            {{ xar_data_input({type: "checkbox", name: "dashboard", checked: dashboard}) }}
                            {{ xar_data_label({label: "Enable the Admin Dashboard", for: "dashboard", title: "Use the Admin Dashboard to manage all your Admin settings from a single page."}) }}
                        </div>
                        <div class="textInputContainer">
                            {{ xar_data_label({label: "Dashboard Template name", for: "dashtemplate", title: "Template name for the dashboard - no trailing suffix, defaults to \'dashboard\'"}) }}
                            <div class="infoAddedInput">
                                {% set valDashtamplate = xar_var({scope: "module", module: "themes", name: "dashtemplate"}) %}
                                {{ xar_data_input({id: "dashtamplate", name: "dashtamplate", type: "textbox", value: valDashtamplate, size: "30", maxlength: "100"}) }}
                                <span class="inputIndication">(without the .xt extension)</span>
                                <p>The Admin Dashboard is automatically used with all admin
                                functions. The default page template name is 
                                <strong>dashboard.xt</strong>.</p>
                                <p>A page template called 
                                <strong>admin.xt</strong>will be used automatically without this
                                switch and can be customised on a module by module basis (eg
                                admin-articles.xt).
                                </p>
                            </div>
                        </div>
                    </fieldset>
                    <div class="checkInputContainer">
                        {% set checkAdminpagemenu = adminpagemenu %}
                        {{ xar_data_input({type: "checkbox", name: "adminpagemenu", id: "adminpagemenu", checked: checkAdminpagemenu}) }}
                        {{ xar_data_label({label: "Enable InPage Admin SubMenus", for: "adminpagemenu", title: "Use submenus in the page for admin functions."}) }}
                    </div>
                    <div class="checkInputContainer">
                        {% set checkUsermenu = xar_coremethod('xarModHooks', 'isHooked', ['themes', 'roles']) %}
                        {{ xar_data_input({type: "checkbox", name: "usermenu", id: "usermenu", checked: checkUsermenu}) }}
                        {{ xar_data_label({label: "Allow users to set their theme in User Account page", for: "usermenu", title: "Allow users to select themes from their Account Details page."}) }}
                    </div>
                </fieldset>
                <fieldset>
                <legend>Site Display Options</legend>
                {% set valAuthid = xar_var({scope: "module", module: "authsystem", name: "authid"}) %}
                {{ xar_data_input({id: "authid", name: "authid", type: "hidden", value: valAuthid}) }}
                <div class="textInputContainer">
                    {% set valSitename = xar_modvar('themes', 'SiteName') %}
                    {{ xar_data_label({label: "Site Name", for: "sitename"}) }}
                    {{ xar_data_input({type: "textbox", name: "sitename", id: "sitename", value: valSitename}) }}
                </div>
                <div class="textInputContainer">
                    {% set valSiteslogan = xar_modvar('themes', 'SiteSlogan') %}
                    {{ xar_data_label({label: "Site Slogan", for: "slogan"}) }}
                    {{ xar_data_input({type: "textbox", id: "slogan", name: "slogan", value: valSiteslogan}) }}
                </div>
                <div class="textInputContainer">
                    {% set valCopyright = xar_modvar('themes', 'SiteCopyRight') %}
                    {{ xar_data_label({label: "Copyright", for: "copyright"}) }}
                    {{ xar_data_input({type: "textbox", name: "copyright", id: "copyright", value: valCopyright}) }}
                </div>{{ xar_coremethod('xarVar', 'delCached', ['Mod.Variables.themes','SiteCopyRight']) }} 
                <div class="textareaContainer">
                    {% set valFooternote = xar_modvar('themes', 'SiteFooter') %}
                    {{ xar_data_label({label: "Footer Note", for: "footer"}) }}
                    {{ xar_data_input({type: "textarea", id: "footer", name: "footer", cols: "60", rows: "5", value: valFooternote}) }}
                </div>{{ xar_coremethod('xarVar', 'delCached', ['Mod.Variables.themes','SiteFooter']) }} 
                <div class="textInputContainer">
                    {% set valSeperator = xar_modvar('themes', 'SiteTitleSeparator') %}
                    {{ xar_data_label({label: "Page Title Separator", for: "separator"}) }}
                    {{ xar_data_input({type: "textbox", name: "separator", id: "separator", value: valSeperator}) }}
                </div>
                <div class="selectContainer">
                    {% set options = [
                        {'id': 'default', 'name': xar_translate('Site Name - Module Name - Page Name')},
                        {'id': 'sp', 'name': xar_translate('Site Name - Page Name')},
                        {'id': 'mps', 'name': xar_translate('Module Name - Page Name - Site Name')},
                        {'id': 'pms', 'name': xar_translate('Page Name - Module Name - Site Name')},
                        {'id': 'to', 'name': xar_translate('Page Name')},
                        {'id': 'theme', 'name': xar_translate('Theme Driven')},
                    ] %}
                    {% set valPagetitle = xar_var({scope: "module", module: "themes", name: "SiteTitleOrder"}) %}
                    {{ xar_data_label({label: "Page Title Order", for: "pagetitle"}) }}
                    {{ xar_data_input({type: "dropdown", name: "pagetitle", options: options, value: valPagetitle}) }}
                </div></fieldset>
                <fieldset>
                    <legend>Template Debugging options</legend>
            {% if xar_coremethod('xarConfigVars', 'get', [null,'Site.BL.CacheTemplates']) %}
                <div class="checkInputContainer">
                    {% set checkShowphpcbit = xar_var({scope: "module", module: "themes", name: "ShowPHPCommentBlockInTemplates"}) %}
                    {{ xar_data_input({type: "checkbox", name: "showphpcbit", id: "showphpcbit", checked: checkShowphpcbit}) }}
                    {{ xar_data_label({label: "Show php comment block header in compiled templates", for: "showphpcbit"}) }}
                </div>
            {% endif %}

                    <div class="checkInputContainer">
                        {% set checkShowtemplates = xar_var({scope: "module", module: "themes", name: "ShowTemplates"}) %}
                        {{ xar_data_input({type: "checkbox", name: "showtemplates", id: "showtemplates", checked: checkShowtemplates}) }}
                        {{ xar_data_label({label: "Show template filenames in HTML comments", for: "showtemplates"}) }}
                    </div>
                    <div class="checkInputContainer">
                        {% set checkCachetemplates = xar_var({scope: "config", name: "Site.BL.CacheTemplates"}) %}
                        {{ xar_data_input({type: "checkbox", name: "cachetemplates", id: "cachetemplates", checked: checkCachetemplates}) }}
                        {{ xar_data_label({label: "Cache templates", for: "cachetemplates"}) }}
                    </div>
                    <div class="checkInputContainer">
                        {% set checkVardump = xar_var({scope: "module", module: "themes", name: "var_dump"}) %}
                        {{ xar_data_input({type: "checkbox", name: "var_dump", id: "var_dump", checked: checkVardump}) }}
                        {{ xar_data_label({label: "Debug Templates by Showing Variables Available", for: "var_dump"}) }}
                    </div>
                    {% if xar_coremethod('xarTheme', 'isAvailable', ['atom']) %}
                        {# <!-- This should be moved if we ever fully support the atom spec --> #}
                        <div class="textInputContainer">
                            {% set valAtomtag = xar_modvar('themes', 'AtomTag') %}
                            {{ xar_data_label({label: "Atom Tag", for: "AtomTag"}) }}
                            {{ xar_data_input({type: "textbox", name: "AtomTag", id: "AtomTag", value: valAtomtag}) }}
                        </div>
                    {% endif %}
                </fieldset>
                {# <!-- apparently there is no submit kind of xar:data-input type --> #}
                <input type="submit" value="{{ submitbutton }}"/>
            </form>
        </div>
    </div>
{% endblock %}